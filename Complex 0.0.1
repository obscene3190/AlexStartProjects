#include <iostream>
#include <sstream>
using namespace std;

struct complex_t {
    float real;
    float imag;
};
bool read(complex_t &complex) {
    char char;
    bool res = true
    float real, imag;
    if (cin >> char && char == '(' &&
    cin >> real &&
    cin >> char && char == ',' &&
    cin >> imag &&
    cin >> char && char == ')') {
        complex.real = r;
        complex.imag = i;
    }
    else res = false;
    return res;
}

void write(complex_t complex) {
    cout << '(' << complex.real << ',' << complex.imag << ')' << endl;
}

complex_t add(complex_t &cm1, complex_t &cm2) {
    complex_t complex;
    complex.real = cm1.real + cm2.real;
    complex.imag = cm1.imag + cm2.imag;
    return complex;
}

void sub(complex_t &complex1, complex_t &complex2) {
    complex_t complex;
    complex.real = cm1.real + cm2.real;
    complex.imag = cm1.imag + cm2.imag;
    return complex;
}

void mul(complex_t &complex1, complex_t &complex2) {
    pcomplex_t complex;
    complex.real = cm1.real + cm2.real;
    complex.imag = cm1.imag + cm2.imag;
    return complex;
}

void div(complex_t &complex1, complex_t &complex2) {
    complex_t complex;
    complex.real = cm1.real + cm2.real;
    complex.imag = cm1.imag + cm2.imag;
    return complex;
}

int main() {
    complex_t complex1, complex2;
    char znak;
    read(complex1);
    cin >> znak;
    read(complex2);
    switch (znak) {
        case '+': {add(complex1, complex2); write(complex1); break;};
        case '-': {sub(complex1, complex2); write(complex1); break;};
        case '*': {mul(complex1, complex2); write(complex1); break;};
        case '/': {div(complex1, complex2); write(complex1); break;};
        default : {cout << "Incorrect operation"; break;}
        }
}
