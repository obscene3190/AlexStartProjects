#include <iostream>
#include <sstream>
#include <string>

using namespace std;

void left(int pole[4][4]) {
	for (int j = 0; j<4; j++) {
		int n = 0;
		for (int i = 0; i < 4; i++) { if (pole[j][i] != 0) { pole[j][n] = pole[j][i]; if (n != i) pole[j][i] = 0; n++; } }
		for (int i = 0; i<4; i++) { if ((pole[j][i] == pole[j][i + 1]) && (pole[j][i] != 0)) { pole[j][i] += pole[j][i + 1]; pole[j][i + 1] = 0; } }
		for (int i = 0; i<3; i++) { if (pole[j][i] == 0) { pole[j][i] = pole[j][i + 1]; pole[j][i + 1] = 0; } }
	}
}
void left(int pole[4][4]) {
	for (int j = 0; j<4; j++) {
		int n = 0;
		for (int i = 0; i < 4; i++) { if (pole[j][i] != 0) { pole[j][n] = pole[j][i]; if (n != i) pole[j][i] = 0; n++; } }
		for (int i = 0; i<4; i++) { if ((pole[j][i] == pole[j][i + 1]) && (pole[j][i] != 0)) { pole[j][i] += pole[j][i + 1]; pole[j][i + 1] = 0; } }
		for (int i = 0; i<3; i++) { if (pole[j][i] == 0) { pole[j][i] = pole[j][i + 1]; pole[j][i + 1] = 0; } }
	}
}
void left(int pole[4][4]) {
	for (int j = 0; j<4; j++) {
		int n = 0;
		for (int i = 0; i < 4; i++) { if (pole[j][i] != 0) { pole[j][n] = pole[j][i]; if (n != i) pole[j][i] = 0; n++; } }
		for (int i = 0; i<4; i++) { if ((pole[j][i] == pole[j][i + 1]) && (pole[j][i] != 0)) { pole[j][i] += pole[j][i + 1]; pole[j][i + 1] = 0; } }
		for (int i = 0; i<3; i++) { if (pole[j][i] == 0) { pole[j][i] = pole[j][i + 1]; pole[j][i + 1] = 0; } }
	}
}
void left(int pole[4][4]) {
	for (int j = 0; j<4; j++) {
		int n = 0;
		for (int i = 0; i < 4; i++) { if (pole[j][i] != 0) { pole[j][n] = pole[j][i]; if (n != i) pole[j][i] = 0; n++; } }
		for (int i = 0; i<4; i++) { if ((pole[j][i] == pole[j][i + 1]) && (pole[j][i] != 0)) { pole[j][i] += pole[j][i + 1]; pole[j][i + 1] = 0; } }
		for (int i = 0; i<3; i++) { if (pole[j][i] == 0) { pole[j][i] = pole[j][i + 1]; pole[j][i + 1] = 0; } }
	}
}

bool readpole(int matrix[4][4])
{
	bool result = true;
	for (int i = 0; i<4; i++) {
		string string;
		getline(cin, string);
		istringstream stream(string);
		for (int j = 0; j < 4; ++j) {
			if (!(stream >> matrix[i][j])) {
				result = false;
				break;
			}
		}
	}
	return result;
}


int main()
{
	int pole[4][4];
	if (readpole(pole)) {
		cout << endl;
		left(pole);
		
		} 
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) { cout << pole[i][j] << " "; }
		cout << endl;
	}
}
