#include <iostream>
#include <sstream>
#include <utility>

using namespace std;

void quick(double *array, int left, int right) {
    int l = left, r = right;
    int beg = l;
    while (l <= r)
    {
        while (array[l] < array[beg] && l <= right) l++;
        while (array[r] > array[beg] && r >=left) r--;
 
        if (l <= r)
        {
            swap(array[l],array[r]);
            l++; r--;
        }
    }
    if (l < right) quick(array, l, right);
    if (r > left) quick(array, left, r);
}

bool read (istream & stream, double* &array, unsigned int &size) {
    bool res = true;
    for (unsigned int i=0; i < size; i++) {
        if (!(stream >> array[i])) {
            res = false;
            break;
        }
    }
    return res;
}

void write(ostream & stream,double* array, unsigned int size) {
    for (unsigned int i = 0; i < size; i++) {
         stream << array[i] << ' ';
    }
}

int main() {
    unsigned int size;
    double* array;
    if(!(cin >> size)) {
        cout << "An error has occured while reading numbers from line";
        return 1;
        }
    cin.get();
    string string;
    getline(cin, string);
    istringstream stream(string);
    array = new double [size];
    if( read(stream,array, size)) {
        quick(array, 0, size-1);
        write (cout, array, size);
    }
    else {
        cout << "An error has occured while reading numbers from line";
    }
    delete[] array;
}
