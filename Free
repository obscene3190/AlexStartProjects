#include <iostream>

#include <sstream>

#include <string>

using namespace std;

void left(int pole[4][4]) {

	for (int j = 0; j<4; j++) {

		int n = 0;

		for (int i = 0; i < 4; i++) { if (pole[j][i] != 0) { pole[j][n] = pole[j][i]; if (n != i) pole[j][i] = 0; n++; } }

		for (int i = 0; i<4; i++) { if ((pole[j][i] == pole[j][i + 1]) && (pole[j][i] != 0)) { pole[j][i] += pole[j][i + 1]; pole[j][i + 1] = 0; } }

		for (int i = 0; i<3; i++) { if (pole[j][i] == 0) { pole[j][i] = pole[j][i + 1]; pole[j][i + 1] = 0; } }

	}

}

void right(int pole[4][4]) {

	for (int j = 0; j<4; j++) {

		int n = 3;

		for (int i = 3; i > -1; i--) { if (pole[j][i] != 0) { pole[j][n] = pole[j][i]; if (n != i) pole[j][i] = 0; n--; } }

		for (int i = 3; i > -1; i--) { if ((pole[j][i] == pole[j][i - 1]) && (pole[j][i] != 0)) { pole[j][i] += pole[j][i - 1]; pole[j][i - 1] = 0; } }

		for (int i = 3; i > 0; i--) { if (pole[j][i] == 0) { pole[j][i] = pole[j][i - 1]; pole[j][i - 1] = 0; } }

	}

}

void up(int pole[4][4]) {

	for (int j = 0; j<4; j++) {

		int n = 0;

		for (int i = 0; i < 4; i++) { if (pole[i][j] != 0) { pole[n][j] = pole[i][j]; if (n != i) pole[i][j] = 0; n++; } }

		for (int i = 0; i<4; i++) { if ((pole[i][j] == pole[i+1][j]) && (pole[i][j] != 0)) { pole[i][j] += pole[i+1][j]; pole[i+1][j] = 0; } }

		for (int i = 0; i<3; i++) { if (pole[i][j] == 0) { pole[i][j] = pole[i+1][j]; pole[i+1][j] = 0; } }

	}

}

void down(int pole[4][4]) {

	for (int j = 0; j<4; j++) {

		int n = 3;

		for (int i = 3; i > -1; i--) { if (pole[i][j] != 0) { pole[n][j] = pole[i][j]; if (n != i) pole[i][j] = 0; n--; } }

		for (int i = 3; i > -1; i--) { if ((pole[i][j] == pole[i-1][j]) && (pole[i][j] != 0)) { pole[i][j] += pole[i-1][j]; pole[i-1][j] = 0; } }

		for (int i = 3; i > 0; i--) { if (pole[i][j] == 0) { pole[i][j] = pole[i-1][j]; pole[i-1][j] = 0; } }

}
}
      
int printpole(int pole[4][4]){
    for (int i = 0; i < 4; i++) {

		for (int j = 0; j < 4; j++) { cout << pole[i][j] << " "; }

		cout << endl;}	

}

bool readpole(int matrix[4][4])

{

	bool result = true;

	for (int i = 0; i<4; i++) {

		string string;

		getline(cin, string);

		istringstream stream(string);

		for (int j = 0; j < 4; ++j) {

			if (!(stream >> matrix[i][j])) {

				result = false;

				break;

			}

		}

	}

	return result;

}

int main()

{

	int pole[4][4];
 char znak;

	if (readpole(pole)) {

		cout << endl;

		for(; cin >> znak;){
        switch (znak){
            case 'j':{down(pole); printpole(pole); break;}
            case 'k':{up(pole); printpole(pole); break;}  
            case 'l':{right(pole); printpole(pole); break;} 
               case'h':{left(pole); printpole(pole); break;}                            
        }
         }   
    }
}
