#include <iostream>
#include <sstream>

using namespace std;

bool read(float **matrix, unsigned int rows, unsigned int columns)
{
	bool result = true;
	for (int i = 0; i < rows; i++) {
		for (int j = 0; j < columns; j++) {
			if (!(cin >> matrix[i][j])) {
				result = false;
				break;
			}
		}
	}
	return result;
}

void add(float ** matrix1, float ** matrix2, int rows, int columns)
{
	for (int i = 0; i < rows; i++)
	{
		cout << endl;
		for (int j = 0; j < columns; j++)
		{
			cout << matrix1[i][j] + matrix2[i][j] << " ";
		}
	}
}

int main() {
	unsigned int rows1 = 0, rows2, columns1 = 0, columns2;
	char op;
	cin >> rows1;
	cin.get();
	cin >> columns1;
	cout << "rows1 " << rows1 << ", columns1 " << columns1 << endl;
	float ** matrix1 = new float *[rows1];
	for (unsigned int i = 0; i < rows1; ++i) {
		matrix1[i] = new float[columns1];
	}
	if (read(matrix1, rows1, columns1) && rows1 != columns1) {
		cin >> op;
		switch (op) {
		case 'T':
		case 'R':
		default:
		}
	}
	else if (read(matrix1, rows1, columns1) && rows1 == columns1) {
		cin >> op;
		cin >> rows2;
		cin >> columns2;
		float ** matrix2 = new float *[rows2];
		for (unsigned int i = 0; i < rows2; ++i) {
			matrix2[i] = new float[columns2];
		}
		if (read(matrix2, rows2, columns2) && rows1 == rows2 && columns1 == columns2) {
			switch (op) {
			case '+': { add(matrix1, matrix2, rows1, columns1);
				break; }
			case '-': ;
			case '*': ;
			default: cout << "An error has occured while reading input data";
			}	
		}
			
	}
	else cout << "An error has occured while reading input data";
	
	

}
