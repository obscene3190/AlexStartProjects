#include <iostream>
#include <sstream>

using namespace std;

bool readmatrix(istream & stream, float ** matrix)
{
	bool result = true;
	unsigned int rows;
	unsigned int columns;
	cin >> rows >> columns;
	for (unsigned int i = 0; i < rows; i++) {
		for (unsigned int j = 0; j < columns; ++j) {
			if (!(stream >> matrix[i][j])) {
				result = false;
				break;
			}
		}
	}
	return result;
}

int main() {
	unsigned int rows1 = 0, rows2 = 0;
	unsigned int columns1 = 0, columns2 = 0;
	char op;
	float ** matrix1 = new float *[rows1], ** matrix2 = new float *[rows2];
	for (unsigned int i = 0; i < rows1; ++i) {
		matrix1[i] = new float[columns1];
		for (unsigned int j = 0; j < columns1; ++j) {
			matrix1[i][j] = 0.0f;
		}
	}
	for (unsigned int i = 0; i < rows2; ++i) {
		matrix2[i] = new float[columns2];
		for (unsigned int j = 0; j < columns2; ++j) {
			matrix2[i][j] = 0.0f;
		}
	}
	string string;
	getline(cin, string);
	istringstream stream(string);
	readmatrix(stream, matrix1);
	/*if (readmatrix(stream, matrix1) == 1 && stream >> op  && readmatrix(stream, matrix2) == 1) {
		if (op == '+' && rows1 == rows2 && columns1 == columns2) {
			for (unsigned int i = 0; i < rows1; i++) {
				for (unsigned int j = 0; j < columns1; j++) {
					cout << (matrix1[i][j] + matrix2[i][j]) << " ";
				}
				cout << endl;
			}
		}
	} */
}
